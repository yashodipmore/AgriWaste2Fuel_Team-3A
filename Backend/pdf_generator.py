"""
PDF Certificate Generator using ReportLab
"""

from reportlab.lib.pagesizes import letter, A4
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib import colors
from reportlab.lib.enums import TA_CENTER, TA_LEFT, TA_RIGHT
from reportlab.pdfgen import canvas
from io import BytesIO
from datetime import datetime

def generate_pdf_certificate(cert_data):
    """
    Generate a professional PDF certificate using ReportLab
    
    Args:
        cert_data (dict): Certificate data containing all required fields
        
    Returns:
        bytes: PDF content as bytes
    """
    
    # Create a BytesIO buffer to hold PDF data
    buffer = BytesIO()
    
    # Create PDF document
    doc = SimpleDocTemplate(
        buffer,
        pagesize=A4,
        rightMargin=72,
        leftMargin=72,
        topMargin=72,
        bottomMargin=18
    )
    
    # Get sample style sheet
    styles = getSampleStyleSheet()
    
    # Define custom styles
    title_style = ParagraphStyle(
        'CustomTitle',
        parent=styles['Heading1'],
        fontSize=24,
        spaceAfter=30,
        alignment=TA_CENTER,
        textColor=colors.darkgreen
    )
    
    subtitle_style = ParagraphStyle(
        'CustomSubtitle',
        parent=styles['Heading2'],
        fontSize=16,
        spaceAfter=20,
        alignment=TA_CENTER,
        textColor=colors.darkblue
    )
    
    normal_center_style = ParagraphStyle(
        'NormalCenter',
        parent=styles['Normal'],
        alignment=TA_CENTER,
        fontSize=12,
        spaceAfter=12
    )
    
    # Build content
    story = []
    
    # Header
    story.append(Paragraph("ðŸŒ± AgriWaste2Fuel", title_style))
    story.append(Paragraph("CARBON CREDIT CERTIFICATE", subtitle_style))
    story.append(Spacer(1, 20))
    
    # Certificate content
    story.append(Paragraph("This certificate acknowledges that", normal_center_style))
    
    # User name - highlighted
    user_style = ParagraphStyle(
        'UserName',
        parent=styles['Normal'],
        fontSize=18,
        alignment=TA_CENTER,
        textColor=colors.darkblue,
        spaceAfter=20
    )
    story.append(Paragraph(f"<b>{cert_data['user_name']}</b>", user_style))
    
    # Achievement description
    story.append(Paragraph(
        f"has successfully processed <b>{cert_data['waste_type']}</b> using "
        f"<b>{cert_data['processing_method']}</b> method, contributing to environmental sustainability.",
        normal_center_style
    ))
    
    story.append(Spacer(1, 30))
    
    # Environmental impact table
    impact_data = [
        ['Environmental Impact', 'Value'],
        ['COâ‚‚ Emissions Saved', f"{cert_data['co2_saved']:.2f} kg"],
        ['Carbon Credits Earned', f"{cert_data['carbon_credits']:.2f} credits"],
        ['Processing Method', cert_data['processing_method']],
        ['Waste Type Processed', cert_data['waste_type']]
    ]
    
    impact_table = Table(impact_data, colWidths=[3*inch, 2.5*inch])
    impact_table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.darkgreen),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, 0), 14),
        ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
        ('BACKGROUND', (0, 1), (-1, -1), colors.lightgrey),
        ('GRID', (0, 0), (-1, -1), 1, colors.black)
    ]))
    
    story.append(impact_table)
    story.append(Spacer(1, 40))
    
    # Certificate details
    story.append(Paragraph(
        f"<b>Certificate ID:</b> {cert_data['certificate_id']}<br/>"
        f"<b>Issue Date:</b> {cert_data['issue_date']}<br/>"
        f"<b>Verification Code:</b> {cert_data['verification_code']}",
        normal_center_style
    ))
    
    story.append(Spacer(1, 30))
    
    # Footer
    footer_style = ParagraphStyle(
        'Footer',
        parent=styles['Normal'],
        fontSize=10,
        alignment=TA_CENTER,
        textColor=colors.grey
    )
    
    story.append(Paragraph(
        "This certificate verifies the environmental contribution made through agricultural waste processing.<br/>"
        "Generated by AgriWaste2Fuel Platform - Promoting Sustainable Agriculture",
        footer_style
    ))
    
    # Build PDF
    doc.build(story)
    
    # Get PDF content
    pdf_content = buffer.getvalue()
    buffer.close()
    
    return pdf_content

def test_pdf_generation():
    """Test PDF generation"""
    test_data = {
        'certificate_id': 'CERT-TEST-001',
        'user_name': 'Test Farmer',
        'waste_type': 'CATTLE MANURE',
        'processing_method': 'Anaerobic Digestion',
        'co2_saved': 1250.75,
        'carbon_credits': 4.5,
        'issue_date': datetime.now().strftime('%Y-%m-%d'),
        'verification_code': 'VERIFY-12345'
    }
    
    pdf_content = generate_pdf_certificate(test_data)
    
    # Save test PDF
    with open('test_certificate.pdf', 'wb') as f:
        f.write(pdf_content)
    
    print(f"âœ… PDF generated successfully! Size: {len(pdf_content)} bytes")
    print("ðŸ“„ Saved as test_certificate.pdf")

if __name__ == "__main__":
    test_pdf_generation()
